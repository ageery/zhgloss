/**
 * This class is generated by jOOQ
 */
package com.zhgloss.repo.jooq;


import com.zhgloss.repo.jooq.tables.CedictLoad;
import com.zhgloss.repo.jooq.tables.CedictWord;
import com.zhgloss.repo.jooq.tables.CedictWordDef;
import com.zhgloss.repo.jooq.tables.FindSegments;
import com.zhgloss.repo.jooq.tables.FindSegmentsDetails;
import com.zhgloss.repo.jooq.tables.FindWords;
import com.zhgloss.repo.jooq.tables.FindWordsByDef;
import com.zhgloss.repo.jooq.tables.GetCedictWordParts;
import com.zhgloss.repo.jooq.tables.MakePrefixes;
import com.zhgloss.repo.jooq.tables.TranscriptionPoint;
import com.zhgloss.repo.jooq.tables.TranscriptionSystem;
import com.zhgloss.repo.jooq.tables.Word;
import com.zhgloss.repo.jooq.tables.WordDef;

import javax.annotation.Generated;

import org.jooq.Field;


/**
 * Convenience access to all tables in public
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

	/**
	 * When and how many rows were loaded from the CEDICT data file.
	 */
	public static final CedictLoad CEDICT_LOAD = com.zhgloss.repo.jooq.tables.CedictLoad.CEDICT_LOAD;

	/**
	 * Character-related word data from the CEDICT file.
	 */
	public static final CedictWord CEDICT_WORD = com.zhgloss.repo.jooq.tables.CedictWord.CEDICT_WORD;

	/**
	 * Definition-related word data from the CEDICT file.
	 */
	public static final CedictWordDef CEDICT_WORD_DEF = com.zhgloss.repo.jooq.tables.CedictWordDef.CEDICT_WORD_DEF;

	/**
	 * The table public.find_segments
	 */
	public static final FindSegments FIND_SEGMENTS = com.zhgloss.repo.jooq.tables.FindSegments.FIND_SEGMENTS;

	/**
	 * Get <code>public.find_segments</code> as a field
	 */
	public static FindSegments FIND_SEGMENTS(String t, String ccType, Integer maxSegLen, Boolean maxUnmatched) {
		return FindSegments.FIND_SEGMENTS.call(t, ccType, maxSegLen, maxUnmatched);
	}

	/**
	 * Get <code>public.find_segments</code> as a field
	 */
	public static FindSegments FIND_SEGMENTS(Field<String> t, Field<String> ccType, Field<Integer> maxSegLen, Field<Boolean> maxUnmatched) {
		return FindSegments.FIND_SEGMENTS.call(t, ccType, maxSegLen, maxUnmatched);
	}

	/**
	 * The table public.find_segments_details
	 */
	public static final FindSegmentsDetails FIND_SEGMENTS_DETAILS = com.zhgloss.repo.jooq.tables.FindSegmentsDetails.FIND_SEGMENTS_DETAILS;

	/**
	 * Get <code>public.find_segments_details</code> as a field
	 */
	public static FindSegmentsDetails FIND_SEGMENTS_DETAILS(String txt, String ccType, String tsCode, Integer maxSegLen, Boolean maxUnmatched) {
		return FindSegmentsDetails.FIND_SEGMENTS_DETAILS.call(txt, ccType, tsCode, maxSegLen, maxUnmatched);
	}

	/**
	 * Get <code>public.find_segments_details</code> as a field
	 */
	public static FindSegmentsDetails FIND_SEGMENTS_DETAILS(Field<String> txt, Field<String> ccType, Field<String> tsCode, Field<Integer> maxSegLen, Field<Boolean> maxUnmatched) {
		return FindSegmentsDetails.FIND_SEGMENTS_DETAILS.call(txt, ccType, tsCode, maxSegLen, maxUnmatched);
	}

	/**
	 * The table public.find_words
	 */
	public static final FindWords FIND_WORDS = com.zhgloss.repo.jooq.tables.FindWords.FIND_WORDS;

	/**
	 * Get <code>public.find_words</code> as a field
	 */
	public static FindWords FIND_WORDS(String jsonArrSearch, String tsCode) {
		return FindWords.FIND_WORDS.call(jsonArrSearch, tsCode);
	}

	/**
	 * Get <code>public.find_words</code> as a field
	 */
	public static FindWords FIND_WORDS(Field<String> jsonArrSearch, Field<String> tsCode) {
		return FindWords.FIND_WORDS.call(jsonArrSearch, tsCode);
	}

	/**
	 * The table public.find_words_by_def
	 */
	public static final FindWordsByDef FIND_WORDS_BY_DEF = com.zhgloss.repo.jooq.tables.FindWordsByDef.FIND_WORDS_BY_DEF;

	/**
	 * Get <code>public.find_words_by_def</code> as a field
	 */
	public static FindWordsByDef FIND_WORDS_BY_DEF(String tsquerySearch, String tsCode) {
		return FindWordsByDef.FIND_WORDS_BY_DEF.call(tsquerySearch, tsCode);
	}

	/**
	 * Get <code>public.find_words_by_def</code> as a field
	 */
	public static FindWordsByDef FIND_WORDS_BY_DEF(Field<String> tsquerySearch, Field<String> tsCode) {
		return FindWordsByDef.FIND_WORDS_BY_DEF.call(tsquerySearch, tsCode);
	}

	/**
	 * The table public.get_cedict_word_parts
	 */
	public static final GetCedictWordParts GET_CEDICT_WORD_PARTS = com.zhgloss.repo.jooq.tables.GetCedictWordParts.GET_CEDICT_WORD_PARTS;

	/**
	 * Get <code>public.get_cedict_word_parts</code> as a field
	 */
	public static GetCedictWordParts GET_CEDICT_WORD_PARTS(Object wi) {
		return GetCedictWordParts.GET_CEDICT_WORD_PARTS.call(wi);
	}

	/**
	 * Get <code>public.get_cedict_word_parts</code> as a field
	 */
	public static GetCedictWordParts GET_CEDICT_WORD_PARTS(Field<Object> wi) {
		return GetCedictWordParts.GET_CEDICT_WORD_PARTS.call(wi);
	}

	/**
	 * The table public.make_prefixes
	 */
	public static final MakePrefixes MAKE_PREFIXES = com.zhgloss.repo.jooq.tables.MakePrefixes.MAKE_PREFIXES;

	/**
	 * Get <code>public.make_prefixes</code> as a field
	 */
	public static MakePrefixes MAKE_PREFIXES(String txt) {
		return MakePrefixes.MAKE_PREFIXES.call(txt);
	}

	/**
	 * Get <code>public.make_prefixes</code> as a field
	 */
	public static MakePrefixes MAKE_PREFIXES(Field<String> txt) {
		return MakePrefixes.MAKE_PREFIXES.call(txt);
	}

	/**
	 * Toned transcription syllable info for a transcription system.
	 */
	public static final TranscriptionPoint TRANSCRIPTION_POINT = com.zhgloss.repo.jooq.tables.TranscriptionPoint.TRANSCRIPTION_POINT;

	/**
	 * Phonetic systems for transcribing the Mandarin pronounciation of Chinese characters
	 */
	public static final TranscriptionSystem TRANSCRIPTION_SYSTEM = com.zhgloss.repo.jooq.tables.TranscriptionSystem.TRANSCRIPTION_SYSTEM;

	/**
	 * Character-related word data.
	 */
	public static final Word WORD = com.zhgloss.repo.jooq.tables.Word.WORD;

	/**
	 * Definition-related word data.
	 */
	public static final WordDef WORD_DEF = com.zhgloss.repo.jooq.tables.WordDef.WORD_DEF;
}
