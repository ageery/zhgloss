/**
 * This class is generated by jOOQ
 */
package com.zhgloss.repo.jooq.tables;


import com.zhgloss.repo.jooq.Public;
import com.zhgloss.repo.jooq.tables.records.FindSegmentsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FindSegments extends TableImpl<FindSegmentsRecord> {

	private static final long serialVersionUID = -306727819;

	/**
	 * The reference instance of <code>public.find_segments</code>
	 */
	public static final FindSegments FIND_SEGMENTS = new FindSegments();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FindSegmentsRecord> getRecordType() {
		return FindSegmentsRecord.class;
	}

	/**
	 * The column <code>public.find_segments.chars</code>.
	 */
	public final TableField<FindSegmentsRecord, String> CHARS = createField("chars", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.find_segments.order_num</code>.
	 */
	public final TableField<FindSegmentsRecord, Integer> ORDER_NUM = createField("order_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.find_segments</code> table reference
	 */
	public FindSegments() {
		this("find_segments", null);
	}

	/**
	 * Create an aliased <code>public.find_segments</code> table reference
	 */
	public FindSegments(String alias) {
		this(alias, FIND_SEGMENTS);
	}

	private FindSegments(String alias, Table<FindSegmentsRecord> aliased) {
		this(alias, aliased, new Field[4]);
	}

	private FindSegments(String alias, Table<FindSegmentsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FindSegments as(String alias) {
		return new FindSegments(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public FindSegments rename(String name) {
		return new FindSegments(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public FindSegments call(String t, String ccType, Integer maxSegLen, Boolean maxUnmatched) {
		return new FindSegments(getName(), null, new Field[] { DSL.val(t), DSL.val(ccType), DSL.val(maxSegLen), DSL.val(maxUnmatched) });
	}

	/**
	 * Call this table-valued function
	 */
	public FindSegments call(Field<String> t, Field<String> ccType, Field<Integer> maxSegLen, Field<Boolean> maxUnmatched) {
		return new FindSegments(getName(), null, new Field[] { t, ccType, maxSegLen, maxUnmatched });
	}
}
