/**
 * This class is generated by jOOQ
 */
package com.zhgloss.repo.jooq.tables;


import com.zhgloss.domain.TranscriptionPointRepresentationInfo;
import com.zhgloss.jooq.TranscriptionPointRepresentationInfoConverter;
import com.zhgloss.repo.jooq.Public;
import com.zhgloss.repo.jooq.tables.records.TranscriptionPointRepresentationsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * Transcription points with representation info for each system in JSON.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TranscriptionPointRepresentations extends TableImpl<TranscriptionPointRepresentationsRecord> {

	private static final long serialVersionUID = 122368778;

	/**
	 * The reference instance of <code>public.transcription_point_representations</code>
	 */
	public static final TranscriptionPointRepresentations TRANSCRIPTION_POINT_REPRESENTATIONS = new TranscriptionPointRepresentations();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TranscriptionPointRepresentationsRecord> getRecordType() {
		return TranscriptionPointRepresentationsRecord.class;
	}

	/**
	 * The column <code>public.transcription_point_representations.pinyin_syllable</code>.
	 */
	public final TableField<TranscriptionPointRepresentationsRecord, String> PINYIN_SYLLABLE = createField("pinyin_syllable", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.transcription_point_representations.tone</code>.
	 */
	public final TableField<TranscriptionPointRepresentationsRecord, Integer> TONE = createField("tone", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.transcription_point_representations.system_info</code>.
	 */
	public final TableField<TranscriptionPointRepresentationsRecord, TranscriptionPointRepresentationInfo> SYSTEM_INFO = createField("system_info", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "", new TranscriptionPointRepresentationInfoConverter());

	/**
	 * Create a <code>public.transcription_point_representations</code> table reference
	 */
	public TranscriptionPointRepresentations() {
		this("transcription_point_representations", null);
	}

	/**
	 * Create an aliased <code>public.transcription_point_representations</code> table reference
	 */
	public TranscriptionPointRepresentations(String alias) {
		this(alias, TRANSCRIPTION_POINT_REPRESENTATIONS);
	}

	private TranscriptionPointRepresentations(String alias, Table<TranscriptionPointRepresentationsRecord> aliased) {
		this(alias, aliased, null);
	}

	private TranscriptionPointRepresentations(String alias, Table<TranscriptionPointRepresentationsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "Transcription points with representation info for each system in JSON.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TranscriptionPointRepresentations as(String alias) {
		return new TranscriptionPointRepresentations(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TranscriptionPointRepresentations rename(String name) {
		return new TranscriptionPointRepresentations(name, null);
	}
}
