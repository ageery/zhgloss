/**
 * This class is generated by jOOQ
 */
package com.zhgloss.repo.jooq;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import com.zhgloss.repo.jooq.tables.CedictLoad;
import com.zhgloss.repo.jooq.tables.CedictWord;
import com.zhgloss.repo.jooq.tables.CedictWordDef;
import com.zhgloss.repo.jooq.tables.FindSegments;
import com.zhgloss.repo.jooq.tables.FindSegmentsDetails;
import com.zhgloss.repo.jooq.tables.FindWords;
import com.zhgloss.repo.jooq.tables.FindWordsByDef;
import com.zhgloss.repo.jooq.tables.GetCedictWordParts;
import com.zhgloss.repo.jooq.tables.MakePrefixes;
import com.zhgloss.repo.jooq.tables.SchemaVersion;
import com.zhgloss.repo.jooq.tables.TranscriptionPoint;
import com.zhgloss.repo.jooq.tables.TranscriptionSystem;
import com.zhgloss.repo.jooq.tables.Word;
import com.zhgloss.repo.jooq.tables.WordDef;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

	private static final long serialVersionUID = -99785532;

	/**
	 * The reference instance of <code>public</code>
	 */
	public static final Public PUBLIC = new Public();

	/**
	 * No further instances allowed
	 */
	private Public() {
		super("public");
	}

	@Override
	public final List<Sequence<?>> getSequences() {
		List result = new ArrayList();
		result.addAll(getSequences0());
		return result;
	}

	private final List<Sequence<?>> getSequences0() {
		return Arrays.<Sequence<?>>asList(
			Sequences.CEDICT_LOAD_CEDICT_LOAD_ID_SEQ);
	}

	@Override
	public final List<Table<?>> getTables() {
		List result = new ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final List<Table<?>> getTables0() {
		return Arrays.<Table<?>>asList(
			CedictLoad.CEDICT_LOAD,
			CedictWord.CEDICT_WORD,
			CedictWordDef.CEDICT_WORD_DEF,
			FindSegments.FIND_SEGMENTS,
			FindSegmentsDetails.FIND_SEGMENTS_DETAILS,
			FindWords.FIND_WORDS,
			FindWordsByDef.FIND_WORDS_BY_DEF,
			GetCedictWordParts.GET_CEDICT_WORD_PARTS,
			MakePrefixes.MAKE_PREFIXES,
			SchemaVersion.SCHEMA_VERSION,
			TranscriptionPoint.TRANSCRIPTION_POINT,
			TranscriptionSystem.TRANSCRIPTION_SYSTEM,
			Word.WORD,
			WordDef.WORD_DEF);
	}
}
