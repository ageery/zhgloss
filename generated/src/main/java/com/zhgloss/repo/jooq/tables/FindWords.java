/**
 * This class is generated by jOOQ
 */
package com.zhgloss.repo.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.zhgloss.repo.jooq.Public;
import com.zhgloss.repo.jooq.tables.records.FindWordsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FindWords extends TableImpl<FindWordsRecord> {

	private static final long serialVersionUID = 2073902939;

	/**
	 * The reference instance of <code>public.find_words</code>
	 */
	public static final FindWords FIND_WORDS = new FindWords();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FindWordsRecord> getRecordType() {
		return FindWordsRecord.class;
	}

	/**
	 * The column <code>public.find_words.trad</code>.
	 */
	public final TableField<FindWordsRecord, String> TRAD = createField("trad", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.find_words.simp</code>.
	 */
	public final TableField<FindWordsRecord, String> SIMP = createField("simp", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.find_words.transcription</code>.
	 */
	public final TableField<FindWordsRecord, String> TRANSCRIPTION = createField("transcription", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.find_words.transcription_json</code>.
	 */
	public final TableField<FindWordsRecord, Object> TRANSCRIPTION_JSON = createField("transcription_json", org.jooq.impl.SQLDataType.OTHER, this, "");

	/**
	 * The column <code>public.find_words.defs</code>.
	 */
	public final TableField<FindWordsRecord, String[]> DEFS = createField("defs", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

	/**
	 * Create a <code>public.find_words</code> table reference
	 */
	public FindWords() {
		this("find_words", null);
	}

	/**
	 * Create an aliased <code>public.find_words</code> table reference
	 */
	public FindWords(String alias) {
		this(alias, FIND_WORDS);
	}

	private FindWords(String alias, Table<FindWordsRecord> aliased) {
		this(alias, aliased, new Field[2]);
	}

	private FindWords(String alias, Table<FindWordsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FindWords as(String alias) {
		return new FindWords(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public FindWords rename(String name) {
		return new FindWords(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public FindWords call(String jsonArrSearch, String tsCode) {
		return new FindWords(getName(), null, new Field[] { DSL.val(jsonArrSearch), DSL.val(tsCode) });
	}

	/**
	 * Call this table-valued function
	 */
	public FindWords call(Field<String> jsonArrSearch, Field<String> tsCode) {
		return new FindWords(getName(), null, new Field[] { jsonArrSearch, tsCode });
	}
}
