/**
 * This class is generated by jOOQ
 */
package com.zixinxi.repo.jooq.tables;


import com.zixinxi.repo.jooq.Public;
import com.zixinxi.repo.jooq.tables.records.FindWordsByDefRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FindWordsByDef extends TableImpl<FindWordsByDefRecord> {

	private static final long serialVersionUID = 2012036886;

	/**
	 * The reference instance of <code>public.find_words_by_def</code>
	 */
	public static final FindWordsByDef FIND_WORDS_BY_DEF = new FindWordsByDef();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FindWordsByDefRecord> getRecordType() {
		return FindWordsByDefRecord.class;
	}

	/**
	 * The column <code>public.find_words_by_def.trad</code>.
	 */
	public final TableField<FindWordsByDefRecord, String> TRAD = createField("trad", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.find_words_by_def.simp</code>.
	 */
	public final TableField<FindWordsByDefRecord, String> SIMP = createField("simp", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.find_words_by_def.transcription</code>.
	 */
	public final TableField<FindWordsByDefRecord, String> TRANSCRIPTION = createField("transcription", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.find_words_by_def.transcription_json</code>.
	 */
	public final TableField<FindWordsByDefRecord, Object> TRANSCRIPTION_JSON = createField("transcription_json", org.jooq.impl.SQLDataType.OTHER, this, "");

	/**
	 * The column <code>public.find_words_by_def.defs</code>.
	 */
	public final TableField<FindWordsByDefRecord, String[]> DEFS = createField("defs", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

	/**
	 * Create a <code>public.find_words_by_def</code> table reference
	 */
	public FindWordsByDef() {
		this("find_words_by_def", null);
	}

	/**
	 * Create an aliased <code>public.find_words_by_def</code> table reference
	 */
	public FindWordsByDef(String alias) {
		this(alias, FIND_WORDS_BY_DEF);
	}

	private FindWordsByDef(String alias, Table<FindWordsByDefRecord> aliased) {
		this(alias, aliased, new Field[2]);
	}

	private FindWordsByDef(String alias, Table<FindWordsByDefRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FindWordsByDef as(String alias) {
		return new FindWordsByDef(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public FindWordsByDef rename(String name) {
		return new FindWordsByDef(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public FindWordsByDef call(String tsquerySearch, String tsCode) {
		return new FindWordsByDef(getName(), null, new Field[] { DSL.val(tsquerySearch), DSL.val(tsCode) });
	}

	/**
	 * Call this table-valued function
	 */
	public FindWordsByDef call(Field<String> tsquerySearch, Field<String> tsCode) {
		return new FindWordsByDef(getName(), null, new Field[] { tsquerySearch, tsCode });
	}
}
