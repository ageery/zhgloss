/**
 * This class is generated by jOOQ
 */
package com.zixinxi.repo.jooq;


import com.zixinxi.repo.jooq.tables.CedictWord;
import com.zixinxi.repo.jooq.tables.CedictWordDef;
import com.zixinxi.repo.jooq.tables.SchemaVersion;
import com.zixinxi.repo.jooq.tables.TranscriptionPoint;
import com.zixinxi.repo.jooq.tables.TranscriptionSystem;
import com.zixinxi.repo.jooq.tables.Word;
import com.zixinxi.repo.jooq.tables.WordDef;
import com.zixinxi.repo.jooq.tables.records.CedictWordDefRecord;
import com.zixinxi.repo.jooq.tables.records.CedictWordRecord;
import com.zixinxi.repo.jooq.tables.records.SchemaVersionRecord;
import com.zixinxi.repo.jooq.tables.records.TranscriptionPointRecord;
import com.zixinxi.repo.jooq.tables.records.TranscriptionSystemRecord;
import com.zixinxi.repo.jooq.tables.records.WordDefRecord;
import com.zixinxi.repo.jooq.tables.records.WordRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<CedictWordRecord> CEDICT_WORD_PKEY = UniqueKeys0.CEDICT_WORD_PKEY;
	public static final UniqueKey<CedictWordDefRecord> CEDICT_WORD_DEF_PKEY = UniqueKeys0.CEDICT_WORD_DEF_PKEY;
	public static final UniqueKey<CedictWordDefRecord> CEDICT_WORD_DEF_WORD_ID_ORDER_NUM_KEY = UniqueKeys0.CEDICT_WORD_DEF_WORD_ID_ORDER_NUM_KEY;
	public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = UniqueKeys0.SCHEMA_VERSION_PK;
	public static final UniqueKey<TranscriptionPointRecord> TRANSCRIPTION_POINT_PKEY = UniqueKeys0.TRANSCRIPTION_POINT_PKEY;
	public static final UniqueKey<TranscriptionSystemRecord> TRANSCRIPTION_SYSTEM_PKEY = UniqueKeys0.TRANSCRIPTION_SYSTEM_PKEY;
	public static final UniqueKey<WordRecord> WORD_PKEY = UniqueKeys0.WORD_PKEY;
	public static final UniqueKey<WordDefRecord> WORD_DEF_PKEY = UniqueKeys0.WORD_DEF_PKEY;
	public static final UniqueKey<WordDefRecord> WORD_DEF_WORD_ID_ORDER_NUM_KEY = UniqueKeys0.WORD_DEF_WORD_ID_ORDER_NUM_KEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<CedictWordDefRecord, CedictWordRecord> CEDICT_WORD_DEF__CEDICT_WORD_DEF_WORD_ID_FKEY = ForeignKeys0.CEDICT_WORD_DEF__CEDICT_WORD_DEF_WORD_ID_FKEY;
	public static final ForeignKey<TranscriptionPointRecord, TranscriptionSystemRecord> TRANSCRIPTION_POINT__TRANSCRIPTION_POINT_TS_CODE_FKEY = ForeignKeys0.TRANSCRIPTION_POINT__TRANSCRIPTION_POINT_TS_CODE_FKEY;
	public static final ForeignKey<WordDefRecord, WordRecord> WORD_DEF__WORD_DEF_WORD_ID_FKEY = ForeignKeys0.WORD_DEF__WORD_DEF_WORD_ID_FKEY;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<CedictWordRecord> CEDICT_WORD_PKEY = createUniqueKey(CedictWord.CEDICT_WORD, CedictWord.CEDICT_WORD.ID);
		public static final UniqueKey<CedictWordDefRecord> CEDICT_WORD_DEF_PKEY = createUniqueKey(CedictWordDef.CEDICT_WORD_DEF, CedictWordDef.CEDICT_WORD_DEF.ID);
		public static final UniqueKey<CedictWordDefRecord> CEDICT_WORD_DEF_WORD_ID_ORDER_NUM_KEY = createUniqueKey(CedictWordDef.CEDICT_WORD_DEF, CedictWordDef.CEDICT_WORD_DEF.WORD_ID, CedictWordDef.CEDICT_WORD_DEF.ORDER_NUM);
		public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = createUniqueKey(SchemaVersion.SCHEMA_VERSION, SchemaVersion.SCHEMA_VERSION.VERSION);
		public static final UniqueKey<TranscriptionPointRecord> TRANSCRIPTION_POINT_PKEY = createUniqueKey(TranscriptionPoint.TRANSCRIPTION_POINT, TranscriptionPoint.TRANSCRIPTION_POINT.TS_CODE, TranscriptionPoint.TRANSCRIPTION_POINT.PINYIN_SYLLABLE, TranscriptionPoint.TRANSCRIPTION_POINT.TONE);
		public static final UniqueKey<TranscriptionSystemRecord> TRANSCRIPTION_SYSTEM_PKEY = createUniqueKey(TranscriptionSystem.TRANSCRIPTION_SYSTEM, TranscriptionSystem.TRANSCRIPTION_SYSTEM.TS_CODE);
		public static final UniqueKey<WordRecord> WORD_PKEY = createUniqueKey(Word.WORD, Word.WORD.ID);
		public static final UniqueKey<WordDefRecord> WORD_DEF_PKEY = createUniqueKey(WordDef.WORD_DEF, WordDef.WORD_DEF.ID);
		public static final UniqueKey<WordDefRecord> WORD_DEF_WORD_ID_ORDER_NUM_KEY = createUniqueKey(WordDef.WORD_DEF, WordDef.WORD_DEF.WORD_ID, WordDef.WORD_DEF.ORDER_NUM);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<CedictWordDefRecord, CedictWordRecord> CEDICT_WORD_DEF__CEDICT_WORD_DEF_WORD_ID_FKEY = createForeignKey(com.zixinxi.repo.jooq.Keys.CEDICT_WORD_PKEY, CedictWordDef.CEDICT_WORD_DEF, CedictWordDef.CEDICT_WORD_DEF.WORD_ID);
		public static final ForeignKey<TranscriptionPointRecord, TranscriptionSystemRecord> TRANSCRIPTION_POINT__TRANSCRIPTION_POINT_TS_CODE_FKEY = createForeignKey(com.zixinxi.repo.jooq.Keys.TRANSCRIPTION_SYSTEM_PKEY, TranscriptionPoint.TRANSCRIPTION_POINT, TranscriptionPoint.TRANSCRIPTION_POINT.TS_CODE);
		public static final ForeignKey<WordDefRecord, WordRecord> WORD_DEF__WORD_DEF_WORD_ID_FKEY = createForeignKey(com.zixinxi.repo.jooq.Keys.WORD_PKEY, WordDef.WORD_DEF, WordDef.WORD_DEF.WORD_ID);
	}
}
